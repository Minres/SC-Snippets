var annotated_dup =
[
    [ "ahb", "namespaceahb.html", "namespaceahb" ],
    [ "apb", "namespaceapb.html", "namespaceapb" ],
    [ "axi", "namespaceaxi.html", "namespaceaxi" ],
    [ "chi", "namespacechi.html", "namespacechi" ],
    [ "logging", "namespacelogging.html", "namespacelogging" ],
    [ "obi", "namespaceobi.html", "namespaceobi" ],
    [ "scc", null, [
      [ "impl", null, [
        [ "helper", "classscc_1_1impl_1_1helper.html", null ],
        [ "helper< T, false >", "classscc_1_1impl_1_1helper_3_01T_00_01false_01_4.html", "classscc_1_1impl_1_1helper_3_01T_00_01false_01_4" ],
        [ "helper< T, true >", "classscc_1_1impl_1_1helper_3_01T_00_01true_01_4.html", "classscc_1_1impl_1_1helper_3_01T_00_01true_01_4" ],
        [ "sc_register", "classscc_1_1impl_1_1sc__register.html", "classscc_1_1impl_1_1sc__register" ]
      ] ],
      [ "sc_dt", null, [
        [ "sc_logic_7", "classscc_1_1sc__dt_1_1sc__logic__7.html", "classscc_1_1sc__dt_1_1sc__logic__7" ]
      ] ],
      [ "trace", null, [
        [ "fst_trace", "structscc_1_1trace_1_1fst__trace.html", "structscc_1_1trace_1_1fst__trace" ],
        [ "fst_trace_enum", "structscc_1_1trace_1_1fst__trace__enum.html", "structscc_1_1trace_1_1fst__trace__enum" ],
        [ "fst_trace_t", "structscc_1_1trace_1_1fst__trace__t.html", "structscc_1_1trace_1_1fst__trace__t" ],
        [ "gz_writer", "classscc_1_1trace_1_1gz__writer.html", "classscc_1_1trace_1_1gz__writer" ],
        [ "traits", "structscc_1_1trace_1_1traits.html", "structscc_1_1trace_1_1traits" ],
        [ "vcd_scope_stack", "structscc_1_1trace_1_1vcd__scope__stack.html", "structscc_1_1trace_1_1vcd__scope__stack" ],
        [ "vcd_trace", "structscc_1_1trace_1_1vcd__trace.html", "structscc_1_1trace_1_1vcd__trace" ]
      ] ],
      [ "abstract_bitfield", "classscc_1_1abstract__bitfield.html", "classscc_1_1abstract__bitfield" ],
      [ "addr_range", "structscc_1_1addr__range.html", "structscc_1_1addr__range" ],
      [ "bitfield", "classscc_1_1bitfield.html", "classscc_1_1bitfield" ],
      [ "bitfield_register", "classscc_1_1bitfield__register.html", "classscc_1_1bitfield__register" ],
      [ "configurable_tracer", "classscc_1_1configurable__tracer.html", "classscc_1_1configurable__tracer" ],
      [ "configurer", "classscc_1_1configurer.html", "classscc_1_1configurer" ],
      [ "ext_attribute", "classscc_1_1ext__attribute.html", "classscc_1_1ext__attribute" ],
      [ "fifo_w_cb", "classscc_1_1fifo__w__cb.html", "classscc_1_1fifo__w__cb" ],
      [ "ForLoop", "structscc_1_1ForLoop.html", null ],
      [ "ForLoop< 1 >", "structscc_1_1ForLoop_3_011_01_4.html", null ],
      [ "fst_trace_file", "structscc_1_1fst__trace__file.html", "structscc_1_1fst__trace__file" ],
      [ "indexed_resource_access_if", "classscc_1_1indexed__resource__access__if.html", "classscc_1_1indexed__resource__access__if" ],
      [ "LogConfig", "structscc_1_1LogConfig.html", "structscc_1_1LogConfig" ],
      [ "memory", "classscc_1_1memory.html", "classscc_1_1memory" ],
      [ "MT19937", "classscc_1_1MT19937.html", null ],
      [ "observer", "structscc_1_1observer.html", "structscc_1_1observer" ],
      [ "ordered_semaphore", "classscc_1_1ordered__semaphore.html", "classscc_1_1ordered__semaphore" ],
      [ "ordered_semaphore_t", "structscc_1_1ordered__semaphore__t.html", "structscc_1_1ordered__semaphore__t" ],
      [ "peq", "structscc_1_1peq.html", "structscc_1_1peq" ],
      [ "perf_estimator", "classscc_1_1perf__estimator.html", "classscc_1_1perf__estimator" ],
      [ "resetable", "classscc_1_1resetable.html", "classscc_1_1resetable" ],
      [ "resource_access_if", "classscc_1_1resource__access__if.html", "classscc_1_1resource__access__if" ],
      [ "router", "classscc_1_1router.html", "classscc_1_1router" ],
      [ "sc_bigint_tester", "structscc_1_1sc__bigint__tester.html", "structscc_1_1sc__bigint__tester" ],
      [ "sc_biguint_tester", "structscc_1_1sc__biguint__tester.html", "structscc_1_1sc__biguint__tester" ],
      [ "sc_bv_tester", "structscc_1_1sc__bv__tester.html", "structscc_1_1sc__bv__tester" ],
      [ "sc_int_tester", "structscc_1_1sc__int__tester.html", "structscc_1_1sc__int__tester" ],
      [ "sc_lv_tester", "structscc_1_1sc__lv__tester.html", "structscc_1_1sc__lv__tester" ],
      [ "sc_owning_signal", "classscc_1_1sc__owning__signal.html", "classscc_1_1sc__owning__signal" ],
      [ "sc_ref_variable", "structscc_1_1sc__ref__variable.html", "structscc_1_1sc__ref__variable" ],
      [ "sc_ref_variable< sc_core::sc_event >", "structscc_1_1sc__ref__variable_3_01sc__core_1_1sc__event_01_4.html", "structscc_1_1sc__ref__variable_3_01sc__core_1_1sc__event_01_4" ],
      [ "sc_ref_variable_masked", "structscc_1_1sc__ref__variable__masked.html", "structscc_1_1sc__ref__variable__masked" ],
      [ "sc_register_indexed", "classscc_1_1sc__register__indexed.html", "classscc_1_1sc__register__indexed" ],
      [ "sc_register_masked", "classscc_1_1sc__register__masked.html", "classscc_1_1sc__register__masked" ],
      [ "sc_thread_pool", "classscc_1_1sc__thread__pool.html", "classscc_1_1sc__thread__pool" ],
      [ "sc_uint_tester", "structscc_1_1sc__uint__tester.html", "structscc_1_1sc__uint__tester" ],
      [ "sc_variable", "structscc_1_1sc__variable.html", "structscc_1_1sc__variable" ],
      [ "sc_variable< bool >", "structscc_1_1sc__variable_3_01bool_01_4.html", "structscc_1_1sc__variable_3_01bool_01_4" ],
      [ "sc_variable_b", "structscc_1_1sc__variable__b.html", "structscc_1_1sc__variable__b" ],
      [ "sc_variable_vector", "structscc_1_1sc__variable__vector.html", "structscc_1_1sc__variable__vector" ],
      [ "ScLogger", "structscc_1_1ScLogger.html", "structscc_1_1ScLogger" ],
      [ "stream_redirection", "classscc_1_1stream__redirection.html", "classscc_1_1stream__redirection" ],
      [ "target_memory_map_entry", "structscc_1_1target__memory__map__entry.html", "structscc_1_1target__memory__map__entry" ],
      [ "target_name_map_entry", "structscc_1_1target__name__map__entry.html", "structscc_1_1target__name__map__entry" ],
      [ "tick2time", "structscc_1_1tick2time.html", "structscc_1_1tick2time" ],
      [ "ticking_clock", "classscc_1_1ticking__clock.html", "classscc_1_1ticking__clock" ],
      [ "tickless_clock", "classscc_1_1tickless__clock.html", "classscc_1_1tickless__clock" ],
      [ "time2tick", "structscc_1_1time2tick.html", "structscc_1_1time2tick" ],
      [ "tlm_target", "classscc_1_1tlm__target.html", "classscc_1_1tlm__target" ],
      [ "tlm_target_bfs", "classscc_1_1tlm__target__bfs.html", "classscc_1_1tlm__target__bfs" ],
      [ "tlm_target_bfs_base", "classscc_1_1tlm__target__bfs__base.html", "classscc_1_1tlm__target__bfs__base" ],
      [ "tlm_target_bfs_params", "structscc_1_1tlm__target__bfs__params.html", "structscc_1_1tlm__target__bfs__params" ],
      [ "tlm_target_bfs_register_base", "classscc_1_1tlm__target__bfs__register__base.html", "classscc_1_1tlm__target__bfs__register__base" ],
      [ "traceable", "classscc_1_1traceable.html", "classscc_1_1traceable" ],
      [ "tracer", "classscc_1_1tracer.html", "classscc_1_1tracer" ],
      [ "tracer_base", "classscc_1_1tracer__base.html", "classscc_1_1tracer__base" ],
      [ "value_registry", "classscc_1_1value__registry.html", "classscc_1_1value__registry" ],
      [ "value_registry_if", "structscc_1_1value__registry__if.html", "structscc_1_1value__registry__if" ],
      [ "value_registry_impl", "classscc_1_1value__registry__impl.html", "classscc_1_1value__registry__impl" ],
      [ "vcd_mt_trace_file", "structscc_1_1vcd__mt__trace__file.html", "structscc_1_1vcd__mt__trace__file" ],
      [ "vcd_pull_trace_file", "structscc_1_1vcd__pull__trace__file.html", "structscc_1_1vcd__pull__trace__file" ],
      [ "vcd_push_trace_file", "structscc_1_1vcd__push__trace__file.html", "structscc_1_1vcd__push__trace__file" ]
    ] ],
    [ "scv_tr", null, [
      [ "scv_extensions< tlm::scc::scv::tlm_dmi_data >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1scc_1_1scv_1_1tlm__dmi__data_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1scc_1_1scv_1_1tlm__dmi__data_01_4" ],
      [ "scv_extensions< tlm::scc::scv::tlm_gp_data >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1scc_1_1scv_1_1tlm__gp__data_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1scc_1_1scv_1_1tlm__gp__data_01_4" ],
      [ "scv_extensions< tlm::scc::scv::tlm_phase_enum >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1scc_1_1scv_1_1tlm__phase__enum_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1scc_1_1scv_1_1tlm__phase__enum_01_4" ],
      [ "scv_extensions< tlm::tlm_command >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__command_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__command_01_4" ],
      [ "scv_extensions< tlm::tlm_dmi::dmi_access_e >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__dmi_1_1dmi__access__e_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__dmi_1_1dmi__access__e_01_4" ],
      [ "scv_extensions< tlm::tlm_gp_option >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__gp__option_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__gp__option_01_4" ],
      [ "scv_extensions< tlm::tlm_response_status >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__response__status_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__response__status_01_4" ],
      [ "scv_extensions< tlm::tlm_sync_enum >", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__sync__enum_01_4.html", "classscv__tr_1_1scv__extensions_3_01tlm_1_1tlm__sync__enum_01_4" ],
      [ "SQLiteDB", "classscv__tr_1_1SQLiteDB.html", "classscv__tr_1_1SQLiteDB" ]
    ] ],
    [ "std", null, [
      [ "hash< util::delegate< R(A...)> >", "classstd_1_1hash_3_01util_1_1delegate_3_01R_07A_8_8_8_08_4_01_4.html", "classstd_1_1hash_3_01util_1_1delegate_3_01R_07A_8_8_8_08_4_01_4" ]
    ] ],
    [ "tlm", null, [
      [ "scc", null, [
        [ "pe", null, [
          [ "intor_bw", "structtlm_1_1scc_1_1pe_1_1intor__bw.html", "structtlm_1_1scc_1_1pe_1_1intor__bw" ],
          [ "intor_bw_b", "structtlm_1_1scc_1_1pe_1_1intor__bw__b.html", null ],
          [ "intor_bw_nb", "structtlm_1_1scc_1_1pe_1_1intor__bw__nb.html", null ],
          [ "intor_fw", "structtlm_1_1scc_1_1pe_1_1intor__fw.html", "structtlm_1_1scc_1_1pe_1_1intor__fw" ],
          [ "intor_fw_b", "structtlm_1_1scc_1_1pe_1_1intor__fw__b.html", null ],
          [ "intor_fw_nb", "structtlm_1_1scc_1_1pe_1_1intor__fw__nb.html", null ],
          [ "parallel_pe", "classtlm_1_1scc_1_1pe_1_1parallel__pe.html", "classtlm_1_1scc_1_1pe_1_1parallel__pe" ]
        ] ],
        [ "scv", null, [
          [ "impl", null, [
            [ "tlm_recording_payload", "classtlm_1_1scc_1_1scv_1_1impl_1_1tlm__recording__payload.html", "classtlm_1_1scc_1_1scv_1_1impl_1_1tlm__recording__payload" ],
            [ "tlm_recording_types", "structtlm_1_1scc_1_1scv_1_1impl_1_1tlm__recording__types.html", "structtlm_1_1scc_1_1scv_1_1impl_1_1tlm__recording__types" ]
          ] ],
          [ "tlm_dmi_data", "classtlm_1_1scc_1_1scv_1_1tlm__dmi__data.html", "classtlm_1_1scc_1_1scv_1_1tlm__dmi__data" ],
          [ "tlm_extension_recording_registry", "classtlm_1_1scc_1_1scv_1_1tlm__extension__recording__registry.html", "classtlm_1_1scc_1_1scv_1_1tlm__extension__recording__registry" ],
          [ "tlm_extensions_recording_if", "classtlm_1_1scc_1_1scv_1_1tlm__extensions__recording__if.html", "classtlm_1_1scc_1_1scv_1_1tlm__extensions__recording__if" ],
          [ "tlm_gp_data", "classtlm_1_1scc_1_1scv_1_1tlm__gp__data.html", "classtlm_1_1scc_1_1scv_1_1tlm__gp__data" ],
          [ "tlm_rec_initiator_socket", "classtlm_1_1scc_1_1scv_1_1tlm__rec__initiator__socket.html", "classtlm_1_1scc_1_1scv_1_1tlm__rec__initiator__socket" ],
          [ "tlm_rec_target_socket", "classtlm_1_1scc_1_1scv_1_1tlm__rec__target__socket.html", "classtlm_1_1scc_1_1scv_1_1tlm__rec__target__socket" ],
          [ "tlm_recorder", "classtlm_1_1scc_1_1scv_1_1tlm__recorder.html", "classtlm_1_1scc_1_1scv_1_1tlm__recorder" ],
          [ "tlm_recorder_module", "classtlm_1_1scc_1_1scv_1_1tlm__recorder__module.html", "classtlm_1_1scc_1_1scv_1_1tlm__recorder__module" ],
          [ "tlm_recording_extension", "classtlm_1_1scc_1_1scv_1_1tlm__recording__extension.html", "classtlm_1_1scc_1_1scv_1_1tlm__recording__extension" ]
        ] ],
        [ "data_buffer", "structtlm_1_1scc_1_1data__buffer.html", "structtlm_1_1scc_1_1data__buffer" ],
        [ "initiator_mixin", "classtlm_1_1scc_1_1initiator__mixin.html", "classtlm_1_1scc_1_1initiator__mixin" ],
        [ "sc_signal2tlm_signal", "structtlm_1_1scc_1_1sc__signal2tlm__signal.html", "structtlm_1_1scc_1_1sc__signal2tlm__signal" ],
        [ "signal_initiator_mixin", "classtlm_1_1scc_1_1signal__initiator__mixin.html", "classtlm_1_1scc_1_1signal__initiator__mixin" ],
        [ "signal_target_mixin", "classtlm_1_1scc_1_1signal__target__mixin.html", "classtlm_1_1scc_1_1signal__target__mixin" ],
        [ "tagged_initiator_mixin", "classtlm_1_1scc_1_1tagged__initiator__mixin.html", "classtlm_1_1scc_1_1tagged__initiator__mixin" ],
        [ "tagged_target_mixin", "classtlm_1_1scc_1_1tagged__target__mixin.html", "classtlm_1_1scc_1_1tagged__target__mixin" ],
        [ "target_mixin", "classtlm_1_1scc_1_1target__mixin.html", "classtlm_1_1scc_1_1target__mixin" ],
        [ "tlm2_pv_av_initiator_adapter", "classtlm_1_1scc_1_1tlm2__pv__av__initiator__adapter.html", "classtlm_1_1scc_1_1tlm2__pv__av__initiator__adapter" ],
        [ "tlm2_pv_av_target_adapter", "classtlm_1_1scc_1_1tlm2__pv__av__target__adapter.html", "classtlm_1_1scc_1_1tlm2__pv__av__target__adapter" ],
        [ "tlm_base_mm_interface", "classtlm_1_1scc_1_1tlm__base__mm__interface.html", "classtlm_1_1scc_1_1tlm__base__mm__interface" ],
        [ "tlm_ext_mm", "structtlm_1_1scc_1_1tlm__ext__mm.html", "structtlm_1_1scc_1_1tlm__ext__mm" ],
        [ "tlm_generic_payload_base", "structtlm_1_1scc_1_1tlm__generic__payload__base.html", "structtlm_1_1scc_1_1tlm__generic__payload__base" ],
        [ "tlm_gp_mm", "structtlm_1_1scc_1_1tlm__gp__mm.html", "structtlm_1_1scc_1_1tlm__gp__mm" ],
        [ "tlm_gp_mm_t", "structtlm_1_1scc_1_1tlm__gp__mm__t.html", "structtlm_1_1scc_1_1tlm__gp__mm__t" ],
        [ "tlm_gp_mm_v", "structtlm_1_1scc_1_1tlm__gp__mm__v.html", "structtlm_1_1scc_1_1tlm__gp__mm__v" ],
        [ "tlm_gp_shared_ptr", "classtlm_1_1scc_1_1tlm__gp__shared__ptr.html", "classtlm_1_1scc_1_1tlm__gp__shared__ptr" ],
        [ "tlm_id_extension", "structtlm_1_1scc_1_1tlm__id__extension.html", "structtlm_1_1scc_1_1tlm__id__extension" ],
        [ "tlm_managed_extension", "structtlm_1_1scc_1_1tlm__managed__extension.html", "structtlm_1_1scc_1_1tlm__managed__extension" ],
        [ "tlm_mm", "classtlm_1_1scc_1_1tlm__mm.html", "classtlm_1_1scc_1_1tlm__mm" ],
        [ "tlm_signal", "structtlm_1_1scc_1_1tlm__signal.html", "structtlm_1_1scc_1_1tlm__signal" ],
        [ "tlm_signal2sc_signal", "structtlm_1_1scc_1_1tlm__signal2sc__signal.html", "structtlm_1_1scc_1_1tlm__signal2sc__signal" ],
        [ "tlm_signal_baseprotocol_types", "structtlm_1_1scc_1_1tlm__signal__baseprotocol__types.html", "structtlm_1_1scc_1_1tlm__signal__baseprotocol__types" ],
        [ "tlm_signal_bw_transport_if", "structtlm_1_1scc_1_1tlm__signal__bw__transport__if.html", "structtlm_1_1scc_1_1tlm__signal__bw__transport__if" ],
        [ "tlm_signal_fw_transport_if", "structtlm_1_1scc_1_1tlm__signal__fw__transport__if.html", "structtlm_1_1scc_1_1tlm__signal__fw__transport__if" ],
        [ "tlm_signal_gp", "structtlm_1_1scc_1_1tlm__signal__gp.html", "structtlm_1_1scc_1_1tlm__signal__gp" ],
        [ "tlm_signal_initiator_socket", "structtlm_1_1scc_1_1tlm__signal__initiator__socket.html", "structtlm_1_1scc_1_1tlm__signal__initiator__socket" ],
        [ "tlm_signal_target_socket", "structtlm_1_1scc_1_1tlm__signal__target__socket.html", "structtlm_1_1scc_1_1tlm__signal__target__socket" ],
        [ "tlm_unmanaged_extension", "structtlm_1_1scc_1_1tlm__unmanaged__extension.html", "structtlm_1_1scc_1_1tlm__unmanaged__extension" ]
      ] ]
    ] ],
    [ "util", "namespaceutil.html", "namespaceutil" ]
];